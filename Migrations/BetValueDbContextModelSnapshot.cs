// <auto-generated />
using System;
using BetValue.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BetValue.Migrations
{
    [DbContext(typeof(BetValueDbContext))]
    partial class BetValueDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BetValue.Models.BetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BetValue")
                        .HasColumnType("float");

                    b.Property<int>("OddsId")
                        .HasColumnType("int");

                    b.Property<double>("PlayedOdds")
                        .HasColumnType("float");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OddsId");

                    b.ToTable("Bets");
                });

            modelBuilder.Entity("BetValue.Models.CountryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("BetValue.Models.GameModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AwayGoals")
                        .HasColumnType("int");

                    b.Property<int?>("AwayTeamId")
                        .HasColumnType("int");

                    b.Property<double>("BetValue")
                        .HasColumnType("float");

                    b.Property<double>("CorrectOdds1")
                        .HasColumnType("float");

                    b.Property<double>("CorrectOdds1DNB")
                        .HasColumnType("float");

                    b.Property<double>("CorrectOdds2")
                        .HasColumnType("float");

                    b.Property<double>("CorrectOdds2DNB")
                        .HasColumnType("float");

                    b.Property<double>("CorrectOddsX")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("HomeGoals")
                        .HasColumnType("int");

                    b.Property<int?>("HomeTeamId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPlayed")
                        .HasColumnType("bit");

                    b.Property<string>("Pitch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Round")
                        .HasColumnType("int");

                    b.Property<int>("SerieId")
                        .HasColumnType("int");

                    b.Property<string>("WhatBetHasValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Winner")
                        .HasColumnType("int");

                    b.Property<int>("awayCorners")
                        .HasColumnType("int");

                    b.Property<int>("homeCorners")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AwayTeamId");

                    b.HasIndex("HomeTeamId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("BetValue.Models.LeagueModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TxtOdds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlChances")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlOdds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlSchedule")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Leagues");
                });

            modelBuilder.Entity("BetValue.Models.OddsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AwayWin")
                        .HasColumnType("float");

                    b.Property<double>("AwayWinDNB")
                        .HasColumnType("float");

                    b.Property<double>("Draw")
                        .HasColumnType("float");

                    b.Property<double>("FavoriteDNB")
                        .HasColumnType("float");

                    b.Property<double>("FavoriteOdds")
                        .HasColumnType("float");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<double>("HomeWin")
                        .HasColumnType("float");

                    b.Property<double>("HomeWinDNB")
                        .HasColumnType("float");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Odds");
                });

            modelBuilder.Entity("BetValue.Models.SerieMemberModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CalculatedEndPoints")
                        .HasColumnType("int");

                    b.Property<double>("Difficulty")
                        .HasColumnType("float");

                    b.Property<int>("GamesPlayed")
                        .HasColumnType("int");

                    b.Property<int>("GamesPlayedOnGrass")
                        .HasColumnType("int");

                    b.Property<int>("GamesPlayedOnPlastic")
                        .HasColumnType("int");

                    b.Property<int>("GoalDiff")
                        .HasColumnType("int");

                    b.Property<int>("GoalsAgainst")
                        .HasColumnType("int");

                    b.Property<int>("GoalsFor")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("PointsOnGrass")
                        .HasColumnType("int");

                    b.Property<int>("PointsOnPlastic")
                        .HasColumnType("int");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<int?>("SerieId")
                        .HasColumnType("int");

                    b.Property<double>("SpecialAverage")
                        .HasColumnType("float");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<int>("xP")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SerieId");

                    b.HasIndex("TeamId");

                    b.ToTable("SerieMembers");
                });

            modelBuilder.Entity("BetValue.Models.SerieModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.Property<int>("LongestTeamNameLength")
                        .HasColumnType("int");

                    b.Property<string>("TxtChances")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TxtSchedule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("BetValue.Models.TeamModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pitch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("BetValue.Models.BetModel", b =>
                {
                    b.HasOne("BetValue.Models.OddsModel", "Odds")
                        .WithMany()
                        .HasForeignKey("OddsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Odds");
                });

            modelBuilder.Entity("BetValue.Models.GameModel", b =>
                {
                    b.HasOne("BetValue.Models.TeamModel", "AwayTeam")
                        .WithMany()
                        .HasForeignKey("AwayTeamId");

                    b.HasOne("BetValue.Models.TeamModel", "HomeTeam")
                        .WithMany()
                        .HasForeignKey("HomeTeamId");

                    b.Navigation("AwayTeam");

                    b.Navigation("HomeTeam");
                });

            modelBuilder.Entity("BetValue.Models.LeagueModel", b =>
                {
                    b.HasOne("BetValue.Models.CountryModel", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("BetValue.Models.OddsModel", b =>
                {
                    b.HasOne("BetValue.Models.GameModel", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("BetValue.Models.SerieMemberModel", b =>
                {
                    b.HasOne("BetValue.Models.SerieModel", "Serie")
                        .WithMany()
                        .HasForeignKey("SerieId");

                    b.HasOne("BetValue.Models.TeamModel", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.Navigation("Serie");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("BetValue.Models.SerieModel", b =>
                {
                    b.HasOne("BetValue.Models.LeagueModel", "League")
                        .WithMany()
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("League");
                });
#pragma warning restore 612, 618
        }
    }
}
